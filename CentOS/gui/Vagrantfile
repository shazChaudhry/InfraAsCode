# -*- mode: ruby -*-
# vi: set ft=ruby :

$docker_swarm_init = <<SCRIPT
echo "============== Initializing swarm mode ====================="
docker swarm init --advertise-addr 192.168.99.101 --listen-addr 192.168.99.101:2377
SCRIPT

$install_additional_tools = <<SCRIPT
# gsettings set org.gnome.nautilus.icon-view default-zoom-level small
echo "============== Installing additional tools ====================="
yum update && yum install -y ansible git wget zip unzip
SCRIPT

$install_eclipse = <<SCRIPT
echo "============== Installing Eclipse Oxygen  ====================="
# download java from 'http://www.oracle.com/technetwork/java/javase/downloads/jdk10-downloads-4416644.html'
# and then install it 'sudo yum localinstall jdk-10_linux-x64_bin.rpm'
curl -O http://ftp.jaist.ac.jp/pub/eclipse/technology/epp/downloads/release/oxygen/3/eclipse-java-oxygen-3-linux-gtk-x86_64.tar.gz        
tar -zxvf eclipse-java-oxygen-1a-linux-gtk-x86_64.tar.gz -C /opt
ln -s /opt/eclipse/eclipse /usr/bin/eclipse
sh -c 'echo -e "[Desktop Entry]\nEncoding=UTF-8\nName=Eclipse 4.7\nComment=Eclipse Oxygen\nExec=/usr/bin/eclipse\nIcon=/opt/eclipse/icon.xpm\nCategories=Application;Development;Java;IDE\nVersion=1.0\nType=Application\nTerminal=0" > /usr/share/applications/eclipse-4.7.desktop'
SCRIPT

$terraform = <<SCRIPT
echo "============== Installing Terraform ====================="
wget https://releases.hashicorp.com/terraform/0.11.5/terraform_0.11.5_linux_amd64.zip
unzip terraform_0.11.5_linux_amd64.zip
mv terraform /usr/local/bin/
terraform --version
rm -f *.zip
SCRIPT

$chrome = <<SCRIPT
echo "============== Installing Google Chrome ====================="
sh -c 'echo -e "[google-chrome]\nname=google-chrome\nbaseurl=http://dl.google.com/linux/chrome/rpm/stable/\$basearch\nenabled=1\ngpgcheck=1\ngpgkey=https://dl-ssl.google.com/linux/linux_signing_key.pub" > /etc/yum.repos.d/google-chrome.repo'
yum info google-chrome-stable
yum install -y google-chrome-stable
SCRIPT

$atom = <<SCRIPT
echo "============== Installing Atom Text Editor ====================="
rpm --import https://packagecloud.io/AtomEditor/atom/gpgkey
sh -c 'echo -e "[Atom]\nname=Atom Editor\nbaseurl=https://packagecloud.io/AtomEditor/atom/el/7/\$basearch\nenabled=1\ngpgcheck=0\nrepo_gpgcheck=1\ngpgkey=https://packagecloud.io/AtomEditor/atom/gpgkey" > /etc/yum.repos.d/atom.repo'
yum install -y atom atom-beta
apm install \
  atom-ide-ui \
  file-icons \
  autocomplete-ansible \
  autocomplete-java \
  autocomplete-xml \
  busy-signal \
  git-log \
  intentions \
  java-generator \
  language-docker \
  language-ansible \
  linter \
  linter-ansible-linting \
  linter-docker \
  language-markdown \
  language-terraform \
  linter-markdown \
  linter-terraform-syntax \
  linter-ui-default \
  linter-vagrant-validate \
  markdown-preview-plus \
  platformio-ide-terminal \
  xml-formatter
SCRIPT

Vagrant.configure("2") do |config|

  config.vm.box = "joemann/centos7-vbox-gnome"
  config.hostmanager.enabled = true
	config.hostmanager.manage_host = true
	config.hostmanager.manage_guest = true
	config.vm.provision "docker"

  config.vm.define "node1", primary: true do |node1|
    node1.vm.hostname = 'node1'
    node1.vm.network :private_network, ip: "192.168.99.101"
    node1.vm.provider :virtualbox do |v|
      v.gui = true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 8000]
      v.customize ["modifyvm", :id, "--name", "node1"]
    end
    node1.vm.provision :shell, inline: $docker_swarm_init
    node1.vm.provision "file", source: "~/.ssh", destination: "$HOME/.ssh"
    node1.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/*"
    node1.vm.provision "file", source: "~/.aws", destination: "$HOME/.aws"
    node1.vm.provision "shell", inline: "chmod 600 /home/vagrant/.aws/*"
    node1.vm.provision :shell, inline: $install_additional_tools
    # node1.vm.provision :shell, inline: $install_eclipse
    # node1.vm.provision :shell, inline: $terraform
    # node1.vm.provision :shell, inline: $chrome
    # node1.vm.provision :shell, inline: $atom
  end

end
