# -*- mode: ruby -*-
# vi: set ft=ruby :

$docker_swarm_init = <<SCRIPT
echo "============== Initializing swarm mode ====================="
docker swarm init --advertise-addr 192.168.99.101 --listen-addr 192.168.99.101:2377
SCRIPT

$install_additional_tools = <<SCRIPT
# gsettings set org.gnome.nautilus.icon-view default-zoom-level small
echo "============== Installing additional tools ====================="
yum install -y ansible git java-1.8.0-openjdk-devel
SCRIPT

$install_eclipse = <<SCRIPT
echo "============== Installing Eclipse Oxygen  ====================="
curl -O http://ftp.fau.de/eclipse/technology/epp/downloads/release/oxygen/3/eclipse-java-oxygen-3-linux-gtk-x86_64.tar.gz
tar -zxf eclipse-java-oxygen-3-linux-gtk-x86_64.tar.gz -C /opt
ln -s /opt/eclipse/eclipse /usr/bin/eclipse
cat << EOF > /usr/share/applications/eclipse-4.7.desktop
[Desktop Entry]
Encoding=UTF-8
Name=Eclipse 4.7
Comment=Eclipse Oxygen
Exec=/usr/bin/eclipse
Icon=/opt/eclipse/icon.xpm
Categories=Application;Development;Java;IDE
Version=3.0
Type=Application
Terminal=0"
EOF

rm -f eclipse-java-oxygen-3-linux-gtk-x86_64.tar.gz
SCRIPT

$terraform = <<SCRIPT
echo "============== Installing Terraform ====================="
curl -O https://releases.hashicorp.com/terraform/0.11.5/terraform_0.11.5_linux_amd64.zip
unzip terraform_0.11.5_linux_amd64.zip
mv terraform /usr/local/bin/
rm -f terraform_0.11.5_linux_amd64.zip
SCRIPT

$chrome = <<SCRIPT
echo "============== Installing Google Chrome ====================="
cat << EOF > /etc/yum.repos.d/google-chrome.repo
[google-chrome]
name=google-chrome
baseurl=http://dl.google.com/linux/chrome/rpm/stable/x86_64
enabled=1
gpgcheck=1
gpgkey=https://dl.google.com/linux/linux_signing_key.pub
EOF

yum install -y google-chrome-stable
SCRIPT

$atom = <<SCRIPT
echo "============== Installing Atom Text Editor ====================="
rpm --import https://packagecloud.io/AtomEditor/atom/gpgkey

cat << EOF > /etc/yum.repos.d/atom.repo
[Atom]
name=Atom Editor
baseurl=https://packagecloud.io/AtomEditor/atom/el/7/x86_64
enabled=1
gpgcheck=0
repo_gpgcheck=1
gpgkey=https://packagecloud.io/AtomEditor/atom/gpgkey
EOF

yum install -y atom atom-beta

apm install \
  atom-ide-ui \
  file-icons \
  autocomplete-ansible \
  autocomplete-java \
  autocomplete-xml \
  busy-signal \
  git-log \
  intentions \
  java-generator \
  language-docker \
  language-ansible \
  linter \
  linter-ansible-linting \
  linter-docker \
  language-markdown \
  language-terraform \
  linter-markdown \
  linter-terraform-syntax \
  linter-ui-default \
  linter-vagrant-validate \
  markdown-preview-plus \
  xml-formatter
SCRIPT

Vagrant.configure("2") do |config|

  config.vm.box = "joemann/centos7-vbox-gnome"
  config.hostmanager.enabled = true
	config.hostmanager.manage_host = true
	config.hostmanager.manage_guest = true
	config.vm.provision "docker"

  config.vm.define "node1", primary: true do |node1|
    node1.vm.hostname = 'node1'
    node1.vm.network :private_network, ip: "192.168.99.101"
    node1.vm.provider :virtualbox do |v|
      v.gui = true
      v.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
      v.customize ["modifyvm", :id, "--memory", 8000]
      v.customize ["modifyvm", :id, "--name", "node1"]
    end
    node1.vm.provision :shell, inline: $docker_swarm_init
    node1.vm.provision "file", source: "~/.ssh", destination: "$HOME/.ssh"
    node1.vm.provision "shell", inline: "chmod 600 /home/vagrant/.ssh/*"
    node1.vm.provision "file", source: "~/.aws", destination: "$HOME/.aws"
    node1.vm.provision "shell", inline: "chmod 600 /home/vagrant/.aws/*"
    node1.vm.provision :shell, inline: $install_additional_tools
    node1.vm.provision :shell, inline: $install_eclipse
    node1.vm.provision :shell, inline: $terraform
    node1.vm.provision :shell, inline: $chrome
    node1.vm.provision :shell, inline: $atom
  end

end
